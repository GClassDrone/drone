<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gclass.drone.mapper.MemMapper">

<!-- 가입시 받는 값 -->
	<insert id="insert">
		insert into mem(mno, niknm, email, pic, locno, ppose, siteno, siteid)
		values(mem_next,#{niknm},#{email}, #{pic},#{locno},#{ppose},#{siteno},#{siteid})
	</insert>
	
<!-- 로그인 확인 -->
	<select id="login" resultType="MemDto">
		select * 
		from mem 
		where siteno = #{siteno} and siteid = #{siteid}
	</select>
<!-- 중복확인 -->	
	<select id="dulogin" resultType="int">
		select count(niknm)
		  from mem
		 where niknm = #{niknm}
	</select>


<!--프로필 상세 페이지볼 때 읽어오는 값들 -->

	<select id="read" resultType="MemDto">
		select * 
		from vw_mem
		where mno= #{mno}
	</select>


<!-- 프로필 수정할때 수정가능한 값들 -->
	<update id="update">
		update mem set email=#{email}, license=#{license}, prmsg=#{prmsg}
		where mno = #{mno}
	</update>

<!-- 삭제시에 삭제는 멤버 넘버로 -->
	<delete id="delete">
		delete from mem where mno = #{mno}
	</delete>
	
	<!-- 프로필 리스트 불러오기 -->
	
<!-- 	<select id="listAll" resultType="MemDto">
		select *
		  from (
				select rownum as rnum, a.* 
				  from (
						select /*+ index_desc(mem mem_mno_pk) */ *
						  from mem
					   ) a 
		<![CDATA[
				 where rownum <= #{endRowNum}
			   ) b
		 where rnum >= #{startRowNum}
		]]>
	</select> -->
	
	<select id="listAll" resultType="MemDto">
		select *
		  from vw_mem
		 where mno>0
		 order by mno desc
	</select>
	
	<!-- 프로필 디테일부분에서 자기가 올린 컨텐츠를 불러오는 쿼리 -->
	
	<select id="conlist" resultType="CateDto">
		SELECT *
		  FROM (
				SELECT ROWNUM AS rnum
		        	 , a.*
		          FROM (
		        		SELECT /*+ index_desc(cts idx_cts_regdt) */ filelk
		                	 , ttl
		                     , ctt
		                     , ctsno
		                     , ctscateno
		                     , regdt
		                  FROM CTS
		                 where mno = #{mno}
		                   and delyn = 'n'
		                ) a
		        <![CDATA[
		         WHERE ROWNUM <= #{endRowNum}
		        ) b
		 WHERE rnum >= #{startRowNum} 
		        ]]>
	</select>
	<select id="ctsCateTotalRow" resultType="int">
		SELECT /*+ index_desc(cts idx_cts_regdt) */ count(*)
		  FROM CTS
	</select>


	<!-- 프로필에서 게시판 리스트 보는 쿼리 -->

	<select id="mylist" resultType="MemDto">
		select m.mno , b.bcateno, b.subjno, b.subjttl, b.opendt, b.subjctt ,b.delyn
		  from mem m
		  join bsubj b
		    on m.mno = b.mno
		 where m.mno = #{mno}
		   and delyn = 'n'
	</select>
<!-- 여기서부터 쿼리 만들것!!! -->
	<!-- 게시판 만드는 쿼리 -->

	<insert id="binsert">
		insert into bsubj (bcateno, subjno, subjttl, subjctt, mno)
		values(#{bcateno}, bsubj_next, #{subjttl}, #{subjctt}, #{mno})
	</insert>
	
	<!-- 게시판 수정하는 쿼리 -->
 	<update id="bupdate">
		update bsubj set
			     subjttl = #{subjttl}
			   , subjctt = #{subjctt}
			   , delyn = #{delyn}
		 where subjno= #{subjno}
	</update>

	<!-- 게시판 지우는 쿼리-->	
	<delete id="bdelete">
		delete
		  from bsubj
		 where subjno = #{subjno}
	</delete>
	
	<!-- 경력 관련된  쿼리들 -->
	<insert id="actinsert">
		insert into act (actno, mno, actstdt, acteddt, actnm, actctt, actgb, pryn)
		values (act_next, #{mno}, actstdt= #{actstdt}, acteddt=#{acteddt}, actnm=#{actnm}, actctt=#{actctt}, actgb=#{actgb}, pryn=#{pryn} )
	</insert>
	
 	<update id="actupdate">
		update act set
				 actstdt = #{actstdt}
			   , acteddt = #{acteddt}
			   , actnm = #{actnm}
			   , actctt = #{actctt}
			   , actgb = #{actgb}
			   , pryn = #{pryn}
		 where mno = #{mno} and actno = #{actno}
	</update>
		
	<delete id="actdelete">
		delete
		  from act
		 where actno = #{actno}
	</delete>

	<select id="actlist" resultType="MemDto">
		select *
		  from act
		 where mno = #{mno}
	</select>
	
	<!-- 보유 드론 관련된 것들 -->
	
	<insert id="droneinsert">
		insert into drone (mdrno, model, mdrnm, mno)
		values (drone_next, #{model},#{mdrnm}, #{mno} )
	</insert>
	
 	<update id="droneupdate">
		update drone
		   set  model = #{model}
			  , mdrnm = #{mdrnm}
			  , pryn = #{pryn}
		 where mdrno =#{mdrno}
	</update>
		
	<delete id="dronedelete">
		delete
		  from drone
		 where mdrno = #{mdrno}
	</delete>

	<select id="dronelist" resultType="droneDto">
		select *
		  from drone
		 where mno = #{mno}
	</select>
	
	<!-- 즐겨찾기 관련 쿼리들 -->
	
	 <select id="falist" resultType="faDto">
      SELECT f.*, c.ttl, c.ctt, c.filelk
        FROM favorit f JOIN cts c
          ON f.ctscateno = c.ctscateno AND f.ctsno = c.ctsno   
       WHERE f.mno = #{mno}
         and f.fgubun = 'f'
	</select> 
</mapper>